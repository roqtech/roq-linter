const pluginName = '@roq';

module.exports = {
  rules: {
    'dir-contains-index': require('./lib/rules/dir-contains-index'),
    'no-eslint-disable': require('./lib/rules/no-eslint-disable'),
    'no-comments-with-no-content': require('./lib/rules/no-comments-with-no-content'),
    'no-spaces-in-object-definition': require('./lib/rules/no-spaces-in-object-definition'),
    'name-of-class-and-function-rule': require('./lib/rules/name-of-class-and-function-rule'),
    'exports-should-follow-conventions': require('./lib/rules/exports-should-follow-conventions'),
    'filename-suffix-mismatch': require('./lib/rules/filename-suffix-mismatch'),
    'no-use-deprecated-modules': require('./lib/rules/no-use-deprecated-modules'),
    'no-business-logic': require('./lib/rules/no-business-logic'),
    'resolvers-parse-id': require('./lib/rules/resolvers-parse-id.js'),
    'no-invalid-char-in-filename': require('./lib/rules/no-invalid-char-in-filename'),
    'no-invalid-filename-pattern': require('./lib/rules/no-invalid-filename-pattern'),
    'imports-should-follow-conventions': require('./lib/rules/imports-should-follow-conventions'),
    'exports-should-entity-decorator': require('./lib/rules/exports-should-entity-decorator'),
    'define-http-status-enum': require('./lib/rules/define-http-status-enum'),
    'exports-should-module-decorator': require('./lib/rules/exports-should-module-decorator'),
    'exports-should-object-type-decorator': require('./lib/rules/exports-should-object-type-decorator'),
    'correct-location-enums-types-interfaces': require('./lib/rules/correct-location-enums-types-interfaces'),
    'only-layouts-location': require('./lib/rules/only-layouts-location'),
    'repository-correct-export-annotation': require('./lib/rules/repository-correct-export-annotation'),
    'only-interface-export': require('./lib/rules/only-interface-export'),
    'lodash-destructuring-import-is-not-allowed': require('./lib/rules/lodash-destructuring-import-is-not-allowed'),
    'view-correct-location-and-name': require('./lib/rules/view-correct-location-and-name'),
    'only-constants-in-enum': require('./lib/rules/only-constants-in-enum'),
    'exactly-one-enum-definition': require('./lib/rules/exactly-one-enum-definition'),
    'exports-should-scalar-decorator': require('./lib/rules/exports-should-scalar-decorator'),
    'exports-should-schema-decorator': require('./lib/rules/exports-should-schema-decorator'),
    'http-exception-should-not-imported-alias': require('./lib/rules/http-exception-should-not-imported-alias'),
    'http-status-should-not-imported-alias': require('./lib/rules/http-status-should-not-imported-alias'),
    'use-extends-in-components': require('./lib/rules/use-extends-in-components'),
    'no-invalid-hook-resource': require('./lib/rules/no-invalid-hook-resource'),
    'no-use-global-module': require('./lib/rules/no-use-global-module'),
    'no-disallowed-method-decorators': require('./lib/rules/no-disallowed-method-decorators'),
    'mutation-calls-service-method': require('./lib/rules/mutation-calls-service-method'),
    'no-ineffective-clsx': require('./lib/rules/no-ineffective-clsx'),
    'correct-export-name-components-layouts-actions': require('./lib/rules/correct-export-name-components-layouts-actions'),
    'no-invalid-common-component-naming': require('./lib/rules/no-invalid-common-component-naming'),
    'no-invalid-dirname': require('./lib/rules/no-invalid-dirname'),
    'no-invalid-page-resource': require('./lib/rules/no-invalid-page-resource'),
  },
  configs: {
    backendConfig: {
      plugins: [pluginName],
      env: { node: true, es2021: true },
      rules: {
        /* Rules specific to backend to be added here */
        [`${pluginName}/no-business-logic`]: 'error',
        [`${pluginName}/exports-should-entity-decorator`]: 'error',
        [`${pluginName}/only-interface-export`]: 'error',
        [`${pluginName}/exports-should-scalar-decorator`]: 'error',
        [`${pluginName}/exports-should-schema-decorator`]: 'error',
        [`${pluginName}/exactly-one-enum-definition`]: 'error',
        [`${pluginName}/only-constants-in-enum`]: 'error',
        [`${pluginName}/http-exception-should-not-imported-alias`]: 'error',
        [`${pluginName}/http-status-should-not-imported-alias`]: 'error',
        [`${pluginName}/exports-should-object-type-decorator`]: 'error',
        [`${pluginName}/exports-should-module-decorator`]: 'error',
        [`${pluginName}/define-http-status-enum`]: 'error',
        [`${pluginName}/resolvers-parse-id`]: 'error',
        [`${pluginName}/repository-correct-export-annotation`]: 'error',
        [`${pluginName}/no-use-global-module`]: 'warn',
        [`${pluginName}/no-disallowed-method-decorators`]: 'error',
        [`${pluginName}/mutation-calls-service-method`]: 'error',
      },
    },
    frontendConfig: {
      plugins: [pluginName],
      env: { browser: true, es2021: true },
      rules: {
        /* Rules specific to frontend to be added here */
        [`${pluginName}/correct-location-enums-types-interfaces`]: 'warn',
        [`${pluginName}/only-layouts-location`]: 'warn',
        [`${pluginName}/view-correct-location-and-name`]: 'warn',
        [`${pluginName}/no-invalid-hook-resource`]: 'error',
        [`${pluginName}/use-extends-in-components`]: 'warn',
        [`${pluginName}/no-ineffective-clsx`]: 'warn',
        [`${pluginName}/no-invalid-common-component-naming`]: 'error',
        [`${pluginName}/correct-export-name-components-layouts-actions`]: 'warn',
        [`${pluginName}/no-invalid-page-resource`]: 'error',
      },
    },
    commonConfig: {
      plugins: [pluginName],
      env: { browser: true, node: true, es2021: true },
      rules:
      {
        [`${pluginName}/exports-should-follow-conventions`]: 'warn',
        [`${pluginName}/dir-contains-index`]: 'error',
        [`${pluginName}/no-eslint-disable`]: 'warn',
        [`${pluginName}/no-use-deprecated-modules`]: 'warn',
        [`${pluginName}/no-comments-with-no-content`]: 'warn',
        [`${pluginName}/no-spaces-in-object-definition`]: 'warn',
        [`${pluginName}/name-of-class-and-function-rule`]: 'warn',
        [`${pluginName}/filename-suffix-mismatch`]: 'error',
        [`${pluginName}/no-invalid-char-in-filename`]: 'error',
        [`${pluginName}/no-invalid-filename-pattern`]: 'error',
        [`${pluginName}/imports-should-follow-conventions`]: 'warn',
        [`${pluginName}/lodash-destructuring-import-is-not-allowed`]: 'warn',
        [`${pluginName}/no-invalid-dirname`]: 'error',
      },
    },
  },
};
